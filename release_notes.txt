Release: Ninja
Version: 3.2.0
===================
1: Release details
===================
This is release Ninja of Warrior Test Automation Framework

-------------------------------
1.1: List of available releases
-------------------------------
1. Ninja = warrior-3.2.0 to current

==================
2. Version Details
==================
You are on Release Ninja, Version 3.2.0 of Warrior Framework.
Procedure to get a specific version is available in section-3 of this document.
+++++++++++++++++++++++++++++++++
2.1. Change log for this release
+++++++++++++++++++++++++++++++++
-------------
New features:
-------------
[WAR-1157] - Generate JUnit file after each step
[WAR-1052] - Design and implement architecture for Plugins
[WAR-1047] - As a user, I need a plugin to execute Robot testcases
[WAR-1005] - Katana: While saving a new testcase if the user doe not have write permissions notify a appropriate error in the UI
[WAR-970] - OSS: generate docs for our new repo structure.
[WAR-897] - As a user i need the ability to make nested ssh connections
[WAR-1154] - Katana : User permission error notification while saving.
---------
Bugfixes:
---------
[WAR-1300] - Existing Warrior Test cases created using version 2.5 are failing when ran with Warrior version 3.1.1
[WAR-1204] - pylint job on Travis fail to calculate result
[WAR-1203] - Run-init script execution fails with ENV variable 'ENV.NE1.MAIN.DIP_PORT' not found on Warrior latest 3.1.0
[WAR-1197] - Katana : Insert New Step hides the first saved Step.
[WAR-1193] - Katana : Testcase Screen - 'Goto' not showing up its input field.
[WAR-1170] - Katana: Input data file information getting saved as the <IDF> tag instead of the <InputDataFile>Tag
[WAR-1037] - Execution summary results are not getting printed correctly at the end of warrior execution
-------------
Improvements:
-------------
[WAR-1309] - Change pylint diff branch from master to develop
[WAR-1188] - Automate part of the code review process using pylint custom checker
[WAR-1161] - Change directory names in Tools to be uniform i.e. all lower case
=================================================
3. Procedure to get a specific version of Warrior 
=================================================
1. Clone warriorframework
$ git clone https://github.com/warriorframework/warriorframework.git

2. go to warriorframework directory
$cd warriorframework

3. To check the list of versions available, execute "git tag --list" command
$ git tag --list
3.0
3.1
3.2
3.3
3.4
$

3. To Check the current version you are at, execute "git branch" command
$ git branch
* master
$

- * indicates the active version.
- In the above example master is the active version.
- If the active version is master it means you are using a version of warrior framework that is under development. It is 
not a stable tested version.

4. To switch to a specific version from master, execute 'git checkout <version_name>' command.
$ git checkout 3.4
Note: checking out '3.4'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

git checkout -b <new-branch-name>

HEAD is now at 146313d... reduce command timeout, wait after timeout=60
$

5. Execute git branch command to verify the active version.
$ git branch
* (HEAD detached at 3.4)
master
$ 

- * indicates the active version.

6. Switch from one version to another (current=3.4, switch to 3.3)
$ git checkout 3.3
Previous HEAD position was 146313d... reduce command timeout, wait after timeout=60
HEAD is now at ecb6373... WAR-180, handle nd prompt on timeout
$ 
$ git branch
* (HEAD detached at 3.3)
master
$

7. Switch to master branch again.
$ git checkout master
Previous HEAD position was ecb6373... WAR-180, handle nd prompt on timeout
Switched to branch 'master'
Your branch is up-to-date with 'origin/master'.
$ 
$ 
$ git branch
* master
$
